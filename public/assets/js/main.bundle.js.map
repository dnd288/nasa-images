{"version":3,"file":"assets/js/main.bundle.js","sources":["webpack:///./src/main/config/index.js","webpack:///./src/main/index.js","webpack:///./src/main/lib/components/AjaxLoading.jsx","webpack:///./src/main/config/routes.js","webpack:///./src/main/config/main.js","webpack:///./src/main/lib/helpers/registerServiceWorker.js","webpack:///./src/main/app/Home/Home.js","webpack:///./src/main/config/app.js","webpack:///./src/main/lib/components/ErrorBoundary.jsx","webpack:///./src/main/app/App.js","webpack:///./src/main/redux/store/initialState.js","webpack:///./src/main/scss/global.scss","webpack:///./src/main/redux/store/configureStore.js"],"sourcesContent":["import MAIN from './main';\n\nexport default {\n\tMAIN,\n};\n","import 'raf/polyfill';\nimport 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport configureStore from '~store/configureStore';\nimport registerServiceWorker from '~helpers/registerServiceWorker';\n\nimport './scss/global';\n\nimport App from './app/App';\nimport packageJson from '../../package.json';\n\nconsole.log(`%c${packageJson.author.name} version: ${packageJson.version}`, 'background-color: #343E48; color: #90BC47; padding: 5px 10px');\n\nconst store = configureStore();\n\nconst renderApp = () => (\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n);\n\n\nReactDOM.render(\n\trenderApp(),\n\tdocument.getElementById('app'),\n);\n\n/* Add a service worker for Progressive Web App purposes */\nregisterServiceWorker();\n","import React from 'react';\nimport Loader from 'react-loaders';\nimport BlockUi from 'react-block-ui';\nimport { connect } from 'react-redux';\n\nconst defaultProps = {\n\tajaxLoading: true,\n};\n\nconst AjaxLoading = ({ ajaxLoading }) => (<BlockUi tag=\"main\" blocking={ajaxLoading} loader={<Loader active type=\"ball-beat\" color=\"#90BC47\" />} />);\n\nAjaxLoading.defaultProps = defaultProps;\n\nconst mapStateToProps = (state, props) => ({\n\tajaxLoading: state.ajaxLoading,\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AjaxLoading);\n","export default {\n\thome: {\n\t\tname: 'home',\n\t\turi: '/',\n\t},\n};\n","import APP from './app';\n\nexport default {\n\tAPP,\n};\n","/* [::1] is the IPv6 localhost address. 127.0.0.1/8 is considered localhost for IPv4. */\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' || window.location.hostname === '[::1]' || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\n/* eslint-disable no-console */\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((response) => {\n\t\t\tconst registration = response;\n\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * At this point, the old content will have been purged and\n\t\t\t\t\t\t\t * the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t * It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t * available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * At this point, everything has been precached.\n\t\t\t\t\t\t\t * It's the perfect time to display a \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => console.error('Error during service worker registration: ', error));\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t/* Check if the service worker can be found. If it can't, reload the page. */\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t/* Ensure service worker exists, and that we really are getting a JS file. */\n\t\t\tif (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\n\t\t\t\t/* No service worker found. Probably a different app. Reload the page. */\n\t\t\t\tnavigator.serviceWorker.ready\n\t\t\t\t\t.then((registration) => registration.unregister()\n\t\t\t\t\t\t.then(() => window.location.reload()));\n\t\t\t} else {\n\t\t\t\t/* Service worker found. Proceed as normal. */\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch((error) => console.error('No internet connection found. Scheduler is running in offline mode. ', error));\n}\n\nconst unregister = () => {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => registration.unregister());\n\t}\n};\n\nconst register = () => {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = 'service-worker.js';\n\n\t\t\tif (!isLocalhost) {\n\t\t\t\t/* Is not local host. Just register service worker */\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t} else {\n\t\t\t\t/* This is running on localhost. Lets check if a service worker still exists or not. */\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\t\t\t}\n\t\t});\n\t} else {\n\t\tconsole.warn('Cannot register service workers in development mode.');\n\t}\n};\n\nexport default register;\n/* eslint-enable no-console */\n","import React from 'react';\n\nconst Home = () => (\n\t<div>home</div>\n);\n\nexport default Home;\n","import ROUTES from './routes';\n\nexport default {\n\tROUTES,\n};\n","import React, { Component } from 'react';\n\nconst defaultProps = {\n\tchildren: null,\n};\n\nclass ErrorBoundary extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = this.getInitialState();\n\t}\n\n\tgetInitialState = () => ({\n\t\terror: null,\n\t\terrorInfo: null,\n\t});\n\n\tcomponentDidCatch = (error, errorInfo) => this.setState({ error, errorInfo });\n\n\trender = () => {\n\t\tif (this.state.errorInfo) {\n\t\t\treturn <div>error</div>;\n\t\t}\n\n\t\t/* No issues so just render the children */\n\t\treturn this.props.children;\n\t};\n}\n\nErrorBoundary.defaultProps = defaultProps;\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Slide, ToastContainer } from 'react-toastify';\nimport config from '~config';\n\nimport AjaxLoading from '~components/AjaxLoading';\nimport ErrorBoundary from '~components/ErrorBoundary';\n\nimport Home from './Home/Home';\n\nconst { ROUTES } = config.MAIN.APP;\n\nconst App = () => (\n\t<ErrorBoundary>\n\t\t<Switch context=\"router\">\n\t\t\t<Route exact\n\t\t\t\tpath={ROUTES.home.url}\n\t\t\t\tcomponent={Home} />\n\t\t</Switch>\n\t\t<AjaxLoading />\n\t\t<ToastContainer className=\"p-0\"\n\t\t\tdraggable={false}\n\t\t\tnewestOnTop={true}\n\t\t\ttransition={Slide}\n\t\t\thideProgressBar={true} />\n\t</ErrorBoundary>\n);\n\nexport default App;\n","export default {\n\troute: window.location.pathname,\n};\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1572666177087\n      var cssReload = require(\"!../../../node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\",\"sourceMap\":true});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);;\n    }\n  ","import thunk from 'redux-thunk';\n/* import { logger } from 'redux-logger'; */\nimport { compose, createStore, applyMiddleware } from 'redux';\n\nimport initialState from './initialState';\n\nconst middlewares = [];\n\nconst reducers = [];\n\nconst combinedStates = Object.assign(initialState);\n\nmiddlewares.push(thunk);\n\n/*\nif (process.env.NODE_ENV === 'development') {\n\tmiddlewares.push(reduxLogger);\n}\n*/\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n/* eslint-enable no-underscore-dangle */\n\nconst configureStore = () => createStore(reducers, combinedStates, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport default configureStore;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AADA;AACA;AAQA;AAKA;AACA;AAAA;;;;;;;;;;AAjBA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AAEA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AADA;;;;;;;;;;AAdA;AAIA;AAIA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AAFA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,eAYA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;AA9EA;AAGA;AA+BA;AAkBA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;;;;;;;;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AACA;AADA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AACA;AACA;AAFA;AAAA;AACA;AAPA;AAWA;AAAA;AAAA;AAAA;AAAA;AACA;AAZA;AAcA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AAlBA;AAHA;AAIA;AACA;;;;;;;;;;;AANA;AACA;AAuBA;AAEA;AAAA;;;;;;;;;;AA9BA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAJA;AARA;AACA;AAeA;AAAA;;;;;;;;;;AAlBA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA,gCAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;;;;;AAMA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;;;;;;;;;;AApBA;AAEA;AAEA;AAWA;AAGA;;;;;;;;;;;;;;A","sourceRoot":""}